name: Build & Publish

on:
  push:
    branches: ['*']

jobs:
  test:
    name: Go Test
    uses: BESTSELLER/actions/.github/workflows/go_test.yaml@v1.18.0
    secrets: inherit
    with:
      environment: prod

  build-docker:
    needs: test
    name: Build and Push - Docker
    runs-on: ubuntu-24.04
    environment: prod
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ startsWith(github.event_name, 'pull_request') && github.event.pull_request.head.sha || '' }}

      - name: "Set common variables"
        id: "common_variables"
        run: |
          RE='[^0-9A-Za-z-]+' # Allowed characters
          BRANCH_NAME_RAW="${{ github.head_ref || github.ref_name }}"
          BRANCH_NAME=$(echo "$BRANCH_NAME_RAW" | sed -E "s/$RE/-/g")
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
          echo "BRANCH_NAME_LOWER=${BRANCH_NAME,,}" >> $GITHUB_ENV
          echo "branch_name_lower=${BRANCH_NAME,,}" >> $GITHUB_OUTPUT

          echo "CLUSTER_ENV=${{ inputs.environment }}" >> $GITHUB_ENV
          echo "VAULT_SHORT=${{ vars.VAULT_SHORT }}" >> $GITHUB_ENV
          echo "VAULT_ADDR=${{ vars.VAULT_ADDR }}" >> $GITHUB_ENV
          echo "VAULT_ROLE=${{ vars.VAULT_ROLE }}" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Get cluster credentials
        id: cluster_creds
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
        with:
          method: jwt
          url: ${{ vars.VAULT_ADDR }}
          path: ${{ vars.VAULT_AUTH_PATH }}
          role: ${{ vars.VAULT_ROLE }}
          secrets: |
            ES/data/gke/${{ vars.CLUSTER_CREDENTIALS_NAME }} * ;
            SHARED/data/common artifact_registry_url | ARTIFACT_REGISTRY_URL ;
            SHARED/data/common artifact_registry_project | ARTIFACT_REGISTRY_PROJECT ;
            SHARED/data/common DATADOG_API_KEY | DATADOG_API_KEY ;
            ${{ vars.VAULT_SHORT }}/data/CI/${{ vars.CLUSTER_CREDENTIALS_NAME }} * | K8S_CLUSTER_ ;
            ${{ vars.VAULT_SHORT }}/data/$REPOSITORY_NAME/$CLUSTER_ENV * ;

      - id: "auth"
        name: Auth GCloud
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_POOL_PROVIDER_NAME }}
          service_account: ${{ secrets.WORKLOAD_IDENTITY_SA_EMAIL }}

      - name: "Configure docker"
        run: "gcloud auth configure-docker ${{ steps.cluster_creds.outputs.ARTIFACT_REGISTRY_URL }}"

      - name: Prepare image string
        id: prepare_image_tag
        run: |
          image="${{ steps.cluster_creds.outputs.ARTIFACT_REGISTRY_URL }}/${{ steps.cluster_creds.outputs.ARTIFACT_REGISTRY_PROJECT }}/public-docker/$REPOSITORY_NAME"
          echo "DOCKER_FRIENDLY_IMAGE_TAG=${image,,}" >> $GITHUB_OUTPUT # Lowercase everything

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: ${{ steps.prepare_image_tag.outputs.DOCKER_FRIENDLY_IMAGE_TAG }}
          tags: |
            type=raw,value=latest,enable=${{ inputs.docker_create_latest_tag }}
            type=raw,value=${{ inputs.app_version }},enable=true
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=schedule
            type=sha,format=long,prefix=

      - id: buildx
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Build and push
        uses: docker/build-push-action@1dc73863535b631f98b2378be8619f83b136f4a0 # v6.17.0
        with:
          load: true
          tags: ${{ steps.meta.outputs.tags }} # TODO does this work still?
          labels: ${{ steps.meta.outputs.labels }}
          # file: ${{ inputs.docker_file_path }}
          # context: ${{ inputs.docker_context }}
          # build-contexts: ${{ inputs.docker_build_contexts }}
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
          # target: ${{ inputs.docker_target }}
          # secrets: ${{ inputs.docker_secrets }}
          # secret-envs: ${{ inputs.docker_secret_envs }}
          # build-args: ${{ inputs.docker_build_args }}
          # secret-files: |
          #   "gcloud=${{ steps.auth.outputs.credentials_file_path }}"

      - name: push images
        run: docker push --all-tags ${{ steps.prepare_image_tag.outputs.DOCKER_FRIENDLY_IMAGE_TAG }}

  publish-chart:
    name: Publish Helm Chart
    needs: test
    runs-on: ubuntu-24.04
    environment: prod
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ startsWith(github.event_name, 'pull_request') && github.event.pull_request.head.sha || '' }}

      - name: Get credentials
        id: vault-auth
        uses: hashicorp/vault-action@7709c609789c5e27b757a85817483caadbb5939a # v3.3.0
        with:
          method: jwt
          url: ${{ vars.VAULT_ADDR }}
          path: ${{ vars.VAULT_AUTH_PATH }}
          role: ${{ vars.VAULT_ROLE }}
          secrets: |
            ES/data/gke/${{ vars.CLUSTER_CREDENTIALS_NAME }} client_email ;
            SHARED/data/common artifact_registry_url | ARTIFACT_REGISTRY_URL ;
            SHARED/data/common artifact_registry_project | ARTIFACT_REGISTRY_PROJECT ;

      - id: set-variables
        name: Set variables
        run: |
          # Version variables
          echo "VERSION=${{ github.ref_type == 'tag' && github.ref_name || format('0.0.0-{0}', github.sha) }}" >> $GITHUB_ENV

      - id: auth
        name: Auth GCloud
        uses: google-github-actions/auth@ba79af03959ebeac9769e648f473a284504d9193 # v2.1.10
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_POOL_PROVIDER_NAME }}
          service_account: ${{ secrets.WORKLOAD_IDENTITY_SA_EMAIL }}

      - id: package_and_push
        name: Package and push Helm chart
        run: |
          gcloud auth application-default print-access-token | helm registry login -u oauth2accesstoken --password-stdin https://$ARTIFACT_REGISTRY_URL

          # Deployment chart
          helm dependency build charts/deployment
          helm package charts/deployment --version $VERSION
          helm push deployment-$VERSION.tgz oci://$ARTIFACT_REGISTRY_URL/$ARTIFACT_REGISTRY_PROJECT/public-docker/chart

